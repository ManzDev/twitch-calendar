!function(e=".",t="__import__"){try{self[t]=new Function("u","return import(u)")}catch(n){const s=new URL(e,location),a=e=>{URL.revokeObjectURL(e.src),e.remove()};self[t]=e=>new Promise(((n,r)=>{const o=new URL(e,s);if(self[t].moduleMap[o])return n(self[t].moduleMap[o]);const i=new Blob([`import * as m from '${o}';`,`${t}.moduleMap['${o}']=m;`],{type:"text/javascript"}),d=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(i),onerror(){r(new Error(`Failed to import: ${e}`)),a(d)},onload(){n(self[t].moduleMap[o]),a(d)}});document.head.appendChild(d)})),self[t].moduleMap={}}}("/twitch-calendar/");const e=["Lunes","Martes","Miércoles","Jueves","Viernes","Sábado","Domingo"],t=e=>0===e?6:e-1;class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){const e=new Date,n=Number(this.getAttribute("day"))||e.getDate(),s=Number(this.getAttribute("month"))||e.getMonth()+1,a=Number(this.getAttribute("year"))||e.getFullYear(),r=new Date(a,s-1,n);this.date=`<small>${r.toJSON()}</small>`,this.isToday=(e=>{const t=(new Date).toJSON().substring(0,10),n=new Date(e);return n.setDate(e.getDate()+1),t===n.toJSON().substring(0,10)})(r),this.dateNumber=r.getDate(),this.monthNumber=r.getMonth()+1,this.yearNumber=r.getFullYear(),this.dayNumber=t(r.getDay()),this.render()}static get styles(){return"\n      :host {\n        display: inline-block;\n        min-width: 90px;\n        height: 60px;\n        border: 1px solid #777;\n        border-top: 8px solid #777;\n        padding: 5px;\n        margin: 2px;\n        text-align: center;\n      }\n      :host(.today) {\n        background: #73adeb;\n        border-color: #233787;\n      }\n      :host([disabled]) {\n        opacity: 0.2;\n      }\n      :host([festive]) {\n        color: darkred;\n        border-color: darkred;\n      }\n      :host([festive]) .day-number {\n        color: darkred;\n      }\n      .day-name {\n        font-family: Montserrat, sans-serif;\n        font-wegith: 300;\n      }\n      .day-number {\n        font-family: Montserrat, sans-serif;\n        font-weight: 800;\n        font-size: 30px;\n        color: black;\n      }\n      @media screen and (max-width: 775px) {\n        :host { min-width: 30px; }\n        .rest { display: none; }\n      }\n    "}getWeekDay(){const t=e[this.dayNumber];return`${t.substring(0,1)}<span class="rest">${t.substring(1)}</span>`}render(){this.shadowRoot.innerHTML=`\n      <style>${n.styles}</style>\n      <div class="day-name">${this.getWeekDay()}</div>\n      <div class="day-number">${this.dateNumber}</div>\n    `,this.isToday&&this.classList.add("today"),6===this.dayNumber&&this.setAttribute("festive","")}}customElements.define("calendar-day",n);const s=["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"];class a extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get styles(){return"\n      :host {\n\n      }\n      .month-name {\n        font-family: Montserrat, sans-serif;\n        font-weight: 500;\n        font-size: 24px;\n        text-align: center;\n        background: navy;\n        color: white;\n        padding: 5px;\n        margin: 2px;\n      }\n      .days {\n        display: grid;\n        grid-template-columns: repeat(7, 1fr);\n      }\n      .days calendar-day:first-child {\n        grid-column: var(--offset, 0);\n      }\n    "}connectedCallback(){const e=new Date,n=Number(this.getAttribute("month"))||e.getMonth()+1,s=Number(this.getAttribute("year"))||e.getFullYear(),a=new Date(s,n-1,1);this.yearNumber=a.getFullYear(),this.monthNumber=a.getMonth()+1,this.monthIndex=a.getMonth(),this.lastDate=new Date(this.yearNumber,this.monthNumber,0).getDate(),this.firstDay=t(a.getDay())+1,this.render()}get generateDays(){const e=[];for(let t=1;t<=this.lastDate;t++)e.push(t);return e}getPrevDays(){const e=[],t=new Date(this.yearNumber,this.monthIndex,0),n=t.getDate();for(let s=n-(this.firstDay-1);s<n;s++)e.push(`<calendar-day disabled day="${s+1}" month="${t.getMonth()+1}" year="${t.getFullYear()}"></calendar-day>`);return e.join("")}getDays(){return this.generateDays.map((e=>`<calendar-day day="${e}" month="${this.monthNumber}" year="${this.yearNumber}"></calendar-day>`)).join("")}getNextDays(){const e=[],n=new Date(this.yearNumber,this.monthIndex+1,0),s=new Date(this.yearNumber,n.getMonth()+1,1),a=7-(t(n.getDay())+1);for(let t=0;t<a;t++)e.push(`<calendar-day disabled day="${t+1}" month="${s.getMonth()+1}" year="${s.getFullYear()}"></calendar-day>`);return e.join("")}render(){this.shadowRoot.innerHTML=`\n    <style>${a.styles}</style>\n    <div class="month-name">${s[this.monthIndex]}</div>\n    <div class="days">\n      ${this.getPrevDays()}\n      ${this.getDays()}\n      ${this.getNextDays()}\n    </div>\n    `}}customElements.define("calendar-month",a);class r extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get styles(){return"\n      .year-number {\n        font-family: Montserrat, sans-serif;\n        font-weight: 800;\n        font-size: 42px;\n        color: white;\n        text-align: center;\n        background: #39399a;\n        padding: 5px;\n        margin: 2px;\n      }\n    "}connectedCallback(){const e=new Date;this.yearNumber=Number(this.getAttribute("year"))||e.getFullYear(),this.render()}get generateMonths(){const e=[];for(let t=1;t<=12;t++)e.push(t);return e}getMonths(){return this.generateMonths.map((e=>`<calendar-month month="${e}" year="${this.yearNumber}"></calendar-month>`)).join("")}render(){this.shadowRoot.innerHTML=`\n    <style>${r.styles}</style>\n    <div class="year-number">${this.yearNumber}</div>\n    <div class="months">\n      ${this.getMonths()}\n    </div>\n    `}}customElements.define("calendar-year",r);
